name: Build

on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string
      code-gen:
        required: true
        type: boolean
      min-code-coverage:
        required: true
        type: number
      min-pana-score:
        required: true
        type: number

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/${{ inputs.package-name }}

    steps:
      - uses: actions/checkout@v3.3.0
      - uses: dart-lang/setup-dart@v1.4

      - name: Install dependencies
        run: dart pub get
          
      - name: Run build_runner
        if: ${{ inputs.code-gen }}
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Ensure clean git status
        run: ../../tool/ensure_git_clean.sh

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        uses: invertase/github-action-dart-analyzer@v1
        with:
          working-directory: packages/${{ inputs.package-name }}

      - name: Run tests and generate coverage report
        run: ../../tool/generate_code_coverage.sh
        
      - uses: codecov/codecov-action@v2
        with:
          files: packages/${{ inputs.package-name }}/coverage/lcov.info
          working-directory: packages/${{ inputs.package-name }}

  pana:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: packages/${{ inputs.package-name }}

      steps:
        - uses: actions/checkout@v3.3.0
        - uses: dart-lang/setup-dart@v1.4

        - name: Install dependencies
          run: |
            dart pub get
            dart pub global activate pana
        
        - name: Verify pub score
          run: ../../tool/verify_pub_score.sh ${{ inputs.min-pana-score }}
